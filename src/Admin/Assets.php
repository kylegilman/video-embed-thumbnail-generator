<?php

namespace Videopack\Admin;

class Assets {

	public function enqueue_videopack_scripts() {
		// loads plugin-related scripts in the admin area

		if ( ! wp_script_is( 'videopack_admin', 'enqueued' ) ) {

			$options = \Videopack\Admin\Options::get_instance()->get_options();

			wp_enqueue_script( 'videopack_admin', plugins_url( '/js/videopack-admin.js', __FILE__ ), array( 'jquery' ), VIDEOPACK_VERSION, true );
			wp_enqueue_style( 'video_embed_thumbnail_generator_style', plugins_url( '/css/videopack-styles-admin.css', __FILE__ ), '', VIDEOPACK_VERSION );

			wp_localize_script(
				'videopack_admin',
				'videopack_admin_L10n',
				array(
					'ajax_nonce'           => wp_create_nonce( 'kgvid_admin_nonce' ),
					'ffmpeg_exists'        => $options['ffmpeg_exists'],
					'wait'                 => esc_html_x( 'Wait', 'please wait', 'video-embed-thumbnail-generator' ),
					'hidevideo'            => esc_html__( 'Hide video...', 'video-embed-thumbnail-generator' ),
					'choosefromvideo'      => esc_html__( 'Choose from video...', 'video-embed-thumbnail-generator' ),
					'cantloadvideo'        => esc_html__( "Can't load video", 'video-embed-thumbnail-generator' ),
					/* translators: %s is the path to FFmpeg. */
					'cantmakethumbs'       => sprintf( esc_html__( 'Error: unable to load video in browser for thumbnail generation and FFmpeg not found at %s', 'video-embed-thumbnail-generator' ), esc_html( $options['app_path'] ) ),
					'choosethumbnail'      => esc_html__( 'Choose Thumbnail:', 'video-embed-thumbnail-generator' ),
					'saveallthumbnails'    => esc_html__( 'Save All Thumbnails', 'video-embed-thumbnail-generator' ),
					'saving'               => esc_html__( 'Saving...', 'video-embed-thumbnail-generator' ),
					'loading'              => esc_html__( 'Loading...', 'video-embed-thumbnail-generator' ),
					'generate'             => esc_html__( 'Generate', 'video-embed-thumbnail-generator' ),
					'randomize'            => esc_html__( 'Randomize', 'video-embed-thumbnail-generator' ),
					'ffmpegnotfound'       => esc_html__( 'FFmpeg not found', 'video-embed-thumbnail-generator' ),
					'pleasevalidurl'       => esc_html__( 'Please enter a valid video URL', 'video-embed-thumbnail-generator' ),
					'deletemessage'        => esc_html__( "You are about to permanently delete the encoded video.\n 'Cancel' to stop, 'OK' to delete.", 'video-embed-thumbnail-generator' ),
					'saved'                => esc_html__( 'Saved.', 'video-embed-thumbnail-generator' ),
					'runningtest'          => esc_html__( 'Running test...', 'video-embed-thumbnail-generator' ),
					'ffmpegrequired'       => esc_html__( 'FFmpeg required for these functions.', 'video-embed-thumbnail-generator' ),
					'featuredwarning'      => esc_html__( "You are about to set all existing video thumbnails previously generated by this plugin as the featured images for their posts. There is no 'undo' button, so proceed at your own risk.", 'video-embed-thumbnail-generator' ),
					'autothumbnailwarning' => esc_html__( "You are about to create thumbnails for every video in your Media Library that doesn't already have one. This might take a long time. There is no 'undo' button, so proceed at your own risk.\n\nNumber of videos without thumbnails: ", 'video-embed-thumbnail-generator' ),
					'autoencodewarning'    => esc_html__( "You are about to add every video in your Media Library to the video encode queue if it hasn't already been encoded. This might take a long time.", 'video-embed-thumbnail-generator' ),
					'nothumbstomake'       => esc_html__( 'No files generated. All videos are processed already.', 'video-embed-thumbnail-generator' ),
					'cancel_ok'            => esc_html__( "'Cancel' to stop, 'OK' to proceed.", 'video-embed-thumbnail-generator' ),
					'processing'           => esc_html__( 'Processing...', 'video-embed-thumbnail-generator' ),
					'parentwarning_posts'  => esc_html__( 'You are about to set all existing video thumbnails previously generated by this plugin as attachments of their posts rather than their associated videos. Proceed at your own risk.', 'video-embed-thumbnail-generator' ),
					'parentwarning_videos' => esc_html__( 'You are about to set all existing video thumbnails previously generated by this plugin as attachments of their videos rather than their associated posts. Proceed at your own risk.', 'video-embed-thumbnail-generator' ),
					'clearqueuedwarning'   => esc_html__( 'You are about to clear all videos not yet encoded.', 'video-embed-thumbnail-generator' ),
					'clearallwarning'      => esc_html__( 'You are about to clear all videos currently encoding, not yet encoded, completed successfully, and completed with errors.', 'video-embed-thumbnail-generator' ),
					'complete'             => esc_html__( 'Complete', 'video-embed-thumbnail-generator' ),
					'track'                => esc_html__( 'Track', 'video-embed-thumbnail-generator' ),
					'tracktype'            => esc_html__( 'Track type:', 'video-embed-thumbnail-generator' ),
					'subtitles'            => esc_html__( 'subtitles', 'video-embed-thumbnail-generator' ),
					'captions'             => esc_html__( 'captions', 'video-embed-thumbnail-generator' ),
					'chapters'             => esc_html__( 'chapters', 'video-embed-thumbnail-generator' ),
					'choosetextfile'       => esc_html__( 'Choose a Text File', 'video-embed-thumbnail-generator' ),
					'settracksource'       => esc_html__( 'Set as track source', 'video-embed-thumbnail-generator' ),
					'choosefromlibrary'    => esc_html__( 'Choose from Library', 'video-embed-thumbnail-generator' ),
					'languagecode'         => esc_html__( 'Language code:', 'video-embed-thumbnail-generator' ),
					'label'                => esc_html_x( 'Label:', 'noun', 'video-embed-thumbnail-generator' ),
					'trackdefault'         => esc_html__( 'Default:', 'video-embed-thumbnail-generator' ),
					'custom'               => esc_html_x( 'Custom', 'Custom format', 'video-embed-thumbnail-generator' ),
					'clearingcache'        => esc_html__( 'Clearing URL cache...', 'video-embed-thumbnail-generator' ),
					'queue_pause'          => esc_html__( 'Pause the queue. Any videos currently encoding will complete.', 'video-embed-thumbnail-generator' ),
					'queue_paused'         => esc_html__( 'Queue is paused. Press play button at top of screen to start.', 'video-embed-thumbnail-generator' ),
					'queue_play'           => esc_html__( 'Start encoding', 'video-embed-thumbnail-generator' ),
					'nothing_to_encode'    => esc_html__( 'Nothing to encode', 'video-embed-thumbnail-generator' ),
					'close'                => esc_html__( 'Close', 'video-embed-thumbnail-generator' ),
					'canceling'            => esc_html__( 'Canceling', 'video-embed-thumbnail-generator' ),
					'canceled'             => esc_html__( 'Canceled', 'video-embed-thumbnail-generator' ),
					'elapsed'              => esc_html__( 'Elapsed:', 'video-embed-thumbnail-generator' ),
					'remaining'            => esc_html__( 'Remaining:', 'video-embed-thumbnail-generator' ),
					'fps'                  => esc_html_x( 'FPS:', 'Frames per second', 'video-embed-thumbnail-generator' ),
					'encoding_complete'    => esc_html__( 'Encoding Complete', 'video-embed-thumbnail-generator' ),
					'encoding'             => esc_html__( 'Encoding', 'video-embed-thumbnail-generator' ),
					'deleted'              => esc_html__( 'Deleted', 'video-embed-thumbnail-generator' ),
					'not_deleted'          => esc_html__( 'Unable to delete file', 'video-embed-thumbnail-generator' ),
					'not_saved'            => esc_html__( 'Error: No settings saved.', 'video-embed-thumbnail-generator' ),
				)
			);
		}//end if
	}

	public function maybe_enqueue_videopack_scripts( $hook_suffix ) {

		if ( $hook_suffix === 'settings_page_video_embed_thumbnail_generator_settings'
			|| $hook_suffix === 'tools_page_videopack_encoding_queue'
			|| $hook_suffix === 'settings_page_videopack_network_encoding_queue'
		) {
			$this->enqueue_videopack_scripts();
		}
		if ( $hook_suffix === 'settings_page_video_embed_thumbnail_generator_settings' ) {
			( new \Videopack\Frontend\Assets() )->enqueue_assets();
			$js_skins = array(
				'kg-video-js-skin',
				'vjs-theme-city',
				'vjs-theme-fantasy',
				'vjs-theme-forest',
				'vjs-theme-sea',
			);
			foreach ( $js_skins as $skin ) {
				wp_enqueue_style( $skin, plugins_url( '', dirname( __DIR__ ) ) . '/video-js/v8/skins/' . $skin . '.css', '', VIDEOPACK_VERSION );
			}
		}
	}
}
